<?php

namespace MongoDBODMProxies\__CG__\Acme\StoreBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Acme\StoreBundle\Document\Product implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['name' => NULL, 'category' => NULL, 'brand' => NULL, 'productMaterial' => NULL, 'imageUrl' => NULL, 'delivery' => NULL, 'details' => NULL, 'priceFrns1' => NULL, 'priceNewFrns1' => NULL, 'priceFrns2' => NULL, 'priceNewFrns2' => NULL, 'priceFrns3' => NULL, 'priceNewFrns3' => NULL, 'priceFrns4' => NULL, 'priceNewFrns4' => NULL, 'minPrice' => NULL, 'minNewPrice' => NULL, 'priceVariation' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->name, $this->category, $this->brand, $this->productMaterial, $this->imageUrl, $this->delivery, $this->details, $this->priceFrns1, $this->priceNewFrns1, $this->priceFrns2, $this->priceNewFrns2, $this->priceFrns3, $this->priceNewFrns3, $this->priceFrns4, $this->priceNewFrns4, $this->minPrice, $this->minNewPrice, $this->priceVariation);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'category', 'brand', 'productMaterial', 'imageUrl', 'delivery', 'details', 'priceFrns1', 'priceNewFrns1', 'priceFrns2', 'priceNewFrns2', 'priceFrns3', 'priceNewFrns3', 'priceFrns4', 'priceNewFrns4', 'minPrice', 'minNewPrice', 'priceVariation'];
        }

        return ['__isInitialized__', 'id'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->name, $this->category, $this->brand, $this->productMaterial, $this->imageUrl, $this->delivery, $this->details, $this->priceFrns1, $this->priceNewFrns1, $this->priceFrns2, $this->priceNewFrns2, $this->priceFrns3, $this->priceNewFrns3, $this->priceFrns4, $this->priceNewFrns4, $this->minPrice, $this->minNewPrice, $this->priceVariation);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductMaterial($productMaterial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductMaterial', [$productMaterial]);

        return parent::setProductMaterial($productMaterial);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductMaterial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductMaterial', []);

        return parent::getProductMaterial();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageUrl($imageUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageUrl', [$imageUrl]);

        return parent::setImageUrl($imageUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUrl', []);

        return parent::getImageUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelivery($delivery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelivery', [$delivery]);

        return parent::setDelivery($delivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelivery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelivery', []);

        return parent::getDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetails($details)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetails', [$details]);

        return parent::setDetails($details);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceFrns1($priceFrns1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceFrns1', [$priceFrns1]);

        return parent::setPriceFrns1($priceFrns1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceFrns1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceFrns1', []);

        return parent::getPriceFrns1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceNewFrns1($priceNewFrns1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceNewFrns1', [$priceNewFrns1]);

        return parent::setPriceNewFrns1($priceNewFrns1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceNewFrns1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceNewFrns1', []);

        return parent::getPriceNewFrns1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceFrns2($priceFrns2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceFrns2', [$priceFrns2]);

        return parent::setPriceFrns2($priceFrns2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceFrns2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceFrns2', []);

        return parent::getPriceFrns2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceNewFrns2($priceNewFrns2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceNewFrns2', [$priceNewFrns2]);

        return parent::setPriceNewFrns2($priceNewFrns2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceNewFrns2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceNewFrns2', []);

        return parent::getPriceNewFrns2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceFrns3($priceFrns3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceFrns3', [$priceFrns3]);

        return parent::setPriceFrns3($priceFrns3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceFrns3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceFrns3', []);

        return parent::getPriceFrns3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceNewFrns3($priceNewFrns3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceNewFrns3', [$priceNewFrns3]);

        return parent::setPriceNewFrns3($priceNewFrns3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceNewFrns3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceNewFrns3', []);

        return parent::getPriceNewFrns3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceFrns4($priceFrns4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceFrns4', [$priceFrns4]);

        return parent::setPriceFrns4($priceFrns4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceFrns4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceFrns4', []);

        return parent::getPriceFrns4();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceNewFrns4($priceNewFrns4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceNewFrns4', [$priceNewFrns4]);

        return parent::setPriceNewFrns4($priceNewFrns4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceNewFrns4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceNewFrns4', []);

        return parent::getPriceNewFrns4();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinPrice($minPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinPrice', [$minPrice]);

        return parent::setMinPrice($minPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinPrice', []);

        return parent::getMinPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinNewPrice($minNewPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinNewPrice', [$minNewPrice]);

        return parent::setMinNewPrice($minNewPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinNewPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinNewPrice', []);

        return parent::getMinNewPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceVariation($priceVariation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceVariation', [$priceVariation]);

        return parent::setPriceVariation($priceVariation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceVariation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceVariation', []);

        return parent::getPriceVariation();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

}
